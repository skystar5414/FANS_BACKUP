services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: fans-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: fans_db
      POSTGRES_USER: fans_user
      POSTGRES_PASSWORD: fans_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fans_user -d fans_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fans-network

  # API 서버 (개발환경)
  api-dev:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    container_name: fans-api-dev
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://fans_user:fans_password@postgres:5432/fans_db
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=fans_user
      - DB_PASSWORD=fans_password
      - DB_NAME=fans_db
      - NAVER_CLIENT_ID=your-naver-client-id-here
      - NAVER_CLIENT_SECRET=your-naver-client-secret-here
      - KAKAO_CLIENT_ID=your-kakao-client-id-here
      - KAKAO_CLIENT_SECRET=your-kakao-client-secret-here
      - KAKAO_REDIRECT_URI=http://localhost:3001/api/auth/kakao/callback
      - NAVER_REDIRECT_URI=http://localhost:3001/api/auth/naver/callback
      - AI_SERVICE_URL=http://ai-service:8000
      - SESSION_SECRET=your-secret-key-here
      - JWT_SECRET=your-jwt-secret-key-here
      - GEMINI_API_KEY=your-gemini-api-key-here
      - FRONTEND_URL=http://localhost:3001
      - ALLOW_ORIGIN=http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - ./api:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fans-network
    profiles:
      - dev

  # API 서버 (프로덕션환경)
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: fans-api
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://fans_user:fans_password@postgres:5432/fans_db
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=fans_user
      - DB_PASSWORD=fans_password
      - DB_NAME=fans_db
      - NAVER_CLIENT_ID=your-naver-client-id-here
      - NAVER_CLIENT_SECRET=your-naver-client-secret-here
      - KAKAO_CLIENT_ID=your-kakao-client-id-here
      - KAKAO_CLIENT_SECRET=your-kakao-client-secret-here
      - KAKAO_REDIRECT_URI=http://localhost:3001/api/auth/kakao/callback
      - NAVER_REDIRECT_URI=http://localhost:3001/api/auth/naver/callback
      - AI_SERVICE_URL=http://ai-service:8000
      - SESSION_SECRET=your-secret-key-here
      - JWT_SECRET=your-jwt-secret-key-here
      - GEMINI_API_KEY=your-gemini-api-key-here
      - FRONTEND_URL=http://localhost:3001
      - ALLOW_ORIGIN=http://localhost:3000
      
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fans-network
    profiles:
      - prod

volumes:
  postgres_data:

networks:
  fans-network:
    driver: bridge